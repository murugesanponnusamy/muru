install helm
wget https://get.helm.sh/helm-v3.13.1-linux-amd64.tar.gz
tar -xvzf helm-v3.13.1-linux-amd64.tar.gz
cd linux-amd64/
cp helm /usr/bin
==========================================
 1167  helm repo list
 1168  helm list
 1169  helm search repo nginx
 helm repo add bitnami https://charts.bitnami.com/bitnami

 1167  helm repo list
 1168  helm list
 1169  helm search repo nginx

 1171  helm search repo http
 1172  helm search repo php
 helm install stable/phpmyadmin
 1177  helm install stable/mysql --generate-name
 1181  # helm install stable/mysql --generate-name
 1183  helm install stable/phpmyadmin --generate-name
 1028  helm install bitnami/apache --generate-name
 1171  helm search repo http
 1172  helm search repo php
 helm install stable/phpmyadmin
 1177  helm install stable/mysql --generate-name
 1181  # helm install stable/mysql --generate-name
 1183  helm install stable/phpmyadmin --generate-name
 1028  helm install bitnami/apache --generate-name
helm status
helm delete apache-1697283241


=========================================
helm create cts
apt install tree -y
tree cts
cd /cts/templates
 kubectl create deployment app1 --image=httpd --dry-run=client -o yaml > app1.yaml
kubectl expose deployment app1 --name=app1s1 --type=LoadBalancer --port=80 --dry-run=client -o yaml > app1s1.yaml

cd ..
root@vm1:~/cts# cat values.yaml
replicaCount: 3
image:
  repository: kharatramesh/vadapavimages:biryani

root@vm1:~/cts/templates# cat app1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app1
  name: app1
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - image: {{ .Values.image.repository }}
        name: httpd
========================================================
Hexa files ....

root@master:~/hexa/templates# cat service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: app1
  name: {{ .Values.servicename }}
spec:
  ports:
  - port: {{ .Values.serviceport }}
    protocol: TCP
    targetPort:  {{ .Values.targetport  }}
  selector:
    app: app1
  type: {{ .Values.servicetype }}
root@master:~/hexa/templates# cat app1.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: app1
  name: {{ .Values.appname }}

spec:
  replicas: {{ .Values.replicacount }}
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - image: {{ .Values.imagename }}
        name: {{ .Values.cname }}
root@master:~/hexa/templates# cd ..
root@master:~/hexa# vi values.yaml
root@master:~/hexa# cat values.yaml
replicacount: 3
imagename: httpd
servicename: smaosas1
cname: c1
appname: apphexa
serviceport: 80
targetport: 80
servicetype: NodePort

